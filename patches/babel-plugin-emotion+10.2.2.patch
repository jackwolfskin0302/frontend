diff --git a/node_modules/babel-plugin-emotion/dist/babel-plugin-emotion.cjs.dev.js b/node_modules/babel-plugin-emotion/dist/babel-plugin-emotion.cjs.dev.js
index 633e882..076ebf6 100644
--- a/node_modules/babel-plugin-emotion/dist/babel-plugin-emotion.cjs.dev.js
+++ b/node_modules/babel-plugin-emotion/dist/babel-plugin-emotion.cjs.dev.js
@@ -745,36 +745,8 @@ var createStyledMacro = function createStyledMacro(_ref) {

     var t = babel.types;

-    if (references["default"] && references["default"].length) {
-      var _styledIdentifier;
-
-      var getStyledIdentifier = function getStyledIdentifier() {
-        if (_styledIdentifier === undefined) {
-          _styledIdentifier = helperModuleImports.addDefault(state.file.path, importPath, {
-            nameHint: 'styled'
-          });
-        }
-
-        return t.cloneDeep(_styledIdentifier);
-      };
-
-      var originalImportPathStyledIdentifier;
-
-      var getOriginalImportPathStyledIdentifier = function getOriginalImportPathStyledIdentifier() {
-        if (originalImportPathStyledIdentifier === undefined) {
-          originalImportPathStyledIdentifier = helperModuleImports.addDefault(state.file.path, originalImportPath, {
-            nameHint: 'styled'
-          });
-        }
-
-        return t.cloneDeep(originalImportPathStyledIdentifier);
-      };
-
-      if (importPath === originalImportPath) {
-        getOriginalImportPathStyledIdentifier = getStyledIdentifier;
-      }
-
-      references["default"].forEach(function (reference) {
+    if (references["styled"] && references["styled"].length) {
+      references["styled"].forEach(function (reference) {
         var isCall = false;

         if (t.isMemberExpression(reference.parent) && reference.parent.computed === false) {
@@ -784,15 +756,15 @@ var createStyledMacro = function createStyledMacro(_ref) {
           // becasue we don't want to transform the member expression if
           // it's in primitives/native
           reference.parent.property.name.charCodeAt(0) > 96) {
-            reference.parentPath.replaceWith(t.callExpression(getStyledIdentifier(), [t.stringLiteral(reference.parent.property.name)]));
+            reference.parentPath.replaceWith(t.callExpression(t.identifier('styled'), [t.stringLiteral(reference.parent.property.name)]));
           } else {
-            reference.replaceWith(getStyledIdentifier());
+            reference.replaceWith(t.identifier('styled'));
           }
         } else if (reference.parentPath && reference.parentPath.parentPath && t.isCallExpression(reference.parentPath) && reference.parent.callee === reference.node) {
           isCall = true;
-          reference.replaceWith(getStyledIdentifier());
+          reference.replaceWith(t.identifier('styled'));
         } else {
-          reference.replaceWith(getOriginalImportPathStyledIdentifier());
+          reference.replaceWith(t.identifier('styled'));
         }

         if (reference.parentPath && reference.parentPath.parentPath) {
@@ -819,15 +791,6 @@ var createStyledMacro = function createStyledMacro(_ref) {
         }
       });
     }
-
-    Object.keys(references).filter(function (x) {
-      return x !== 'default';
-    }).forEach(function (referenceKey) {
-      var runtimeNode = helperModuleImports.addNamed(state.file.path, referenceKey, importPath);
-      references[referenceKey].reverse().forEach(function (reference) {
-        reference.replaceWith(t.cloneDeep(runtimeNode));
-      });
-    });
   });
 };

@@ -1021,10 +984,6 @@ function index (babel) {
           isBabelMacrosCall: true,
           isEmotionCall: true
         });
-
-        if (!pluginMacros[path.node.source.value].keepImport) {
-          path.remove();
-        }
       },
       Program: function Program(path, state) {
         state.emotionInstancePaths = (state.opts.instances || []).map(function (instancePath) {
@@ -1032,7 +991,7 @@ function index (babel) {
         });
         state.pluginMacros = {
           '@emotion/css': cssMacro,
-          '@emotion/styled': webStyledMacro,
+          '@storybook/theming': webStyledMacro,
           '@emotion/core': emotionCoreMacroThatsNotARealMacro,
           '@emotion/primitives': primitivesStyledMacro,
           '@emotion/native': nativeStyledMacro,
diff --git a/node_modules/babel-plugin-emotion/dist/babel-plugin-emotion.cjs.js b/node_modules/babel-plugin-emotion/dist/babel-plugin-emotion.cjs.js
index 5392a6a..fd134ad 100644
--- a/node_modules/babel-plugin-emotion/dist/babel-plugin-emotion.cjs.js
+++ b/node_modules/babel-plugin-emotion/dist/babel-plugin-emotion.cjs.js
@@ -1,7 +1,3 @@
 'use strict';

-if (process.env.NODE_ENV === "production") {
-  module.exports = require("./babel-plugin-emotion.cjs.prod.js");
-} else {
-  module.exports = require("./babel-plugin-emotion.cjs.dev.js");
-}
+module.exports = require("./babel-plugin-emotion.cjs.dev.js");
